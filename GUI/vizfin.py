# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dicomvizfin.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resizeColumns(1414, 749)
        MainWindow.setMinimumSize(QtCore.QSize(929, 515))

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")

        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")

        self.mainGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.mainGroupBox.setObjectName("mainGroupBox")

        self.gridLayout_11 = QtWidgets.QGridLayout(self.mainGroupBox)
        self.gridLayout_11.setObjectName("gridLayout_11")

        self.splitter_2 = QtWidgets.QSplitter(self.mainGroupBox)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")

        self.seriesExpGroup = QtWidgets.QGroupBox(self.splitter_2)
        self.seriesExpGroup.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.seriesExpGroup.setObjectName("seriesExpGroup")

        self.gridLayout_10 = QtWidgets.QGridLayout(self.seriesExpGroup)
        self.gridLayout_10.setObjectName("gridLayout_10")

        self.seriesViewExp = QtWidgets.QTableView(self.seriesExpGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.seriesViewExp.sizePolicy().hasHeightForWidth())

        self.seriesViewExp.setSizePolicy(sizePolicy)

        self.seriesViewExp.setMinimumSize(QtCore.QSize(0, 0))
        self.seriesViewExp.setAutoFillBackground(True)
        self.seriesViewExp.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.seriesViewExp.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.seriesViewExp.setDragDropOverwriteMode(False)
        self.seriesViewExp.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.seriesViewExp.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.seriesViewExp.setShowGrid(False)
        self.seriesViewExp.setSortingEnabled(True)
        self.seriesViewExp.setObjectName("seriesViewExp")
        self.seriesViewExp.horizontalHeader().setCascadingSectionResizes(True)
        self.seriesViewExp.horizontalHeader().setDefaultSectionSize(30)
        self.seriesViewExp.horizontalHeader().setHighlightSections(False)
        self.seriesViewExp.horizontalHeader().setMinimumSectionSize(30)
        self.seriesViewExp.horizontalHeader().setSortIndicatorShown(True)
        self.seriesViewExp.horizontalHeader().setStretchLastSection(False)
        self.seriesViewExp.verticalHeader().setVisible(False)
        self.seriesViewExp.verticalHeader().setCascadingSectionResizes(False)
        self.seriesViewExp.verticalHeader().setHighlightSections(False)

        self.gridLayout_10.addWidget(self.seriesViewExp, 0, 0, 1, 1)

        self.horizontalLayoutWidget = QtWidgets.QWidget(self.splitter_2)
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")

        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")

        self.splitter = QtWidgets.QSplitter(self.horizontalLayoutWidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")

        self.graphicsBox = QtWidgets.QGroupBox(self.splitter)
        self.graphicsBox.setObjectName("graphicsBox")

        self.gridLayout_4 = QtWidgets.QGridLayout(self.graphicsBox)
        self.gridLayout_4.setObjectName("gridLayout_4")

        self.graphicsView = QtWidgets.QGraphicsView(self.graphicsBox)
        self.graphicsView.setObjectName("graphicsView")

        self.gridLayout_4.addWidget(self.graphicsView, 0, 0, 1, 1)

        self.metadataGroup = QtWidgets.QGroupBox(self.splitter)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.metadataGroup.sizePolicy().hasHeightForWidth())
        self.metadataGroup.setSizePolicy(sizePolicy)
        self.metadataGroup.setMaximumSize(QtCore.QSize(500, 16777215))
        self.metadataGroup.setAutoFillBackground(True)
        self.metadataGroup.setObjectName("metadataGroup")

        self.gridLayout_3 = QtWidgets.QGridLayout(self.metadataGroup)
        self.gridLayout_3.setObjectName("gridLayout_3")

        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")

        self.label = QtWidgets.QLabel(self.metadataGroup)
        self.label.setObjectName("label")
        self.horizontalLayout_3.addWidget(self.label)

        self.filterLine = QtWidgets.QLineEdit(self.metadataGroup)
        self.filterLine.setObjectName("filterLine")
        self.horizontalLayout_3.addWidget(self.filterLine)

        self.gridLayout_3.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.tagView = QtWidgets.QTreeView(self.metadataGroup)
        self.tagView.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tagView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tagView.setProperty("showDropIndicator", False)
        self.tagView.setDragDropOverwriteMode(False)
        self.tagView.setAlternatingRowColors(True)
        self.tagView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tagView.setTextElideMode(QtCore.Qt.ElideNone)
        self.tagView.setIndentation(10)
        self.tagView.setSortingEnabled(True)
        self.tagView.setObjectName("tagView")
        self.gridLayout_3.addWidget(self.tagView, 1, 0, 1, 1)


        self.horizontalLayout_10.addWidget(self.splitter)

        self.gridLayout_11.addWidget(self.splitter_2, 0, 0, 1, 1)
        self.horizontalLayout_14.addWidget(self.mainGroupBox)
        self.verticalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.horizontalLayout_14.addWidget(self.verticalScrollBar)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1414, 22))
        self.menubar.setObjectName("menubar")
        self.menuFiles = QtWidgets.QMenu(self.menubar)
        self.menuFiles.setToolTip("")
        self.menuFiles.setObjectName("menuFiles")
        self.menuADD_DICOM_images = QtWidgets.QMenu(self.menuFiles)
        self.menuADD_DICOM_images.setObjectName("menuADD_DICOM_images")
        self.menuExport = QtWidgets.QMenu(self.menubar)
        self.menuExport.setObjectName("menuExport")
        self.menuZoom = QtWidgets.QMenu(self.menubar)
        self.menuZoom.setObjectName("menuZoom")
        self.menuAnnotations = QtWidgets.QMenu(self.menubar)
        self.menuAnnotations.setObjectName("menuAnnotations")
        self.menuAlterations = QtWidgets.QMenu(self.menubar)
        self.menuAlterations.setObjectName("menuAlterations")
        self.menuAdjustements = QtWidgets.QMenu(self.menubar)
        self.menuAdjustements.setObjectName("menuAdjustements")
        self.menuTransformations = QtWidgets.QMenu(self.menubar)
        self.menuTransformations.setObjectName("menuTransformations")
        self.menuCine = QtWidgets.QMenu(self.menubar)
        self.menuCine.setObjectName("menuCine")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockSeries = QtWidgets.QDockWidget(MainWindow)
        self.dockSeries.setMaximumSize(QtCore.QSize(300, 524287))
        self.dockSeries.setObjectName("dockSeries")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.dockWidgetContents_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.dockWidgetContents_2)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.tab)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.listView = QtWidgets.QListView(self.tab)
        self.listView.setObjectName("listView")
        self.horizontalLayout_4.addWidget(self.listView)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.tab_2)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.tableView = QtWidgets.QTableView(self.tab_2)
        self.tableView.setObjectName("tableView")
        self.horizontalLayout_5.addWidget(self.tableView)
        self.tabWidget.addTab(self.tab_2, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        self.dockSeries.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockSeries)
        self.dockFiles = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockFiles.sizePolicy().hasHeightForWidth())
        self.dockFiles.setSizePolicy(sizePolicy)
        self.dockFiles.setObjectName("dockFiles")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.dockWidgetContents_3)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.dockWidgetContents_3)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.tab_3)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.listView_2 = QtWidgets.QListView(self.tab_3)
        self.listView_2.setObjectName("listView_2")
        self.horizontalLayout_6.addWidget(self.listView_2)
        self.tabWidget_2.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.tab_4)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.tableView_2 = QtWidgets.QTableView(self.tab_4)
        self.tableView_2.setObjectName("tableView_2")
        self.horizontalLayout_7.addWidget(self.tableView_2)
        self.tabWidget_2.addTab(self.tab_4, "")
        self.horizontalLayout_8.addWidget(self.tabWidget_2)
        self.dockFiles.setWidget(self.dockWidgetContents_3)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockFiles)
        self.actionNewWindow = QtWidgets.QAction(MainWindow)
        self.actionNewWindow.setShortcutVisibleInContextMenu(True)
        self.actionNewWindow.setObjectName("actionNewWindow")
        self.actionDuplicateWindow = QtWidgets.QAction(MainWindow)
        self.actionDuplicateWindow.setObjectName("actionDuplicateWindow")
        self.actionOpenDICOMFile = QtWidgets.QAction(MainWindow)
        self.actionOpenDICOMFile.setObjectName("actionOpenDICOMFile")
        self.actionOpenDICOMFolder = QtWidgets.QAction(MainWindow)
        self.actionOpenDICOMFolder.setObjectName("actionOpenDICOMFolder")
        self.actionAddDICOMFile = QtWidgets.QAction(MainWindow)
        self.actionAddDICOMFile.setObjectName("actionAddDICOMFile")
        self.actionAddDICOMFolder = QtWidgets.QAction(MainWindow)
        self.actionAddDICOMFolder.setObjectName("actionAddDICOMFolder")
        self.actionExportImages = QtWidgets.QAction(MainWindow)
        self.actionExportImages.setObjectName("actionExportImages")
        self.actionCopy_to_clipboard = QtWidgets.QAction(MainWindow)
        self.actionCopy_to_clipboard.setObjectName("actionCopy_to_clipboard")
        self.actionCopy_all_to_clipboard = QtWidgets.QAction(MainWindow)
        self.actionCopy_all_to_clipboard.setObjectName("actionCopy_all_to_clipboard")
        self.actionFillViewport = QtWidgets.QAction(MainWindow)
        self.actionFillViewport.setObjectName("actionFillViewport")
        self.actionZoom100 = QtWidgets.QAction(MainWindow)
        self.actionZoom100.setObjectName("actionZoom100")
        self.actionZoom200 = QtWidgets.QAction(MainWindow)
        self.actionZoom200.setObjectName("actionZoom200")
        self.actionZoom400 = QtWidgets.QAction(MainWindow)
        self.actionZoom400.setObjectName("actionZoom400")
        self.actionZoom800 = QtWidgets.QAction(MainWindow)
        self.actionZoom800.setObjectName("actionZoom800")
        self.actionZoomIn = QtWidgets.QAction(MainWindow)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtWidgets.QAction(MainWindow)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionDefaultWindow = QtWidgets.QAction(MainWindow)
        self.actionDefaultWindow.setObjectName("actionDefaultWindow")
        self.actionFullDynamic = QtWidgets.QAction(MainWindow)
        self.actionFullDynamic.setObjectName("actionFullDynamic")
        self.actionCTAbdomen = QtWidgets.QAction(MainWindow)
        self.actionCTAbdomen.setObjectName("actionCTAbdomen")
        self.actionCTAngio = QtWidgets.QAction(MainWindow)
        self.actionCTAngio.setObjectName("actionCTAngio")
        self.actionCTBone = QtWidgets.QAction(MainWindow)
        self.actionCTBone.setObjectName("actionCTBone")
        self.actionCTBrain = QtWidgets.QAction(MainWindow)
        self.actionCTBrain.setObjectName("actionCTBrain")
        self.actionCTChest = QtWidgets.QAction(MainWindow)
        self.actionCTChest.setObjectName("actionCTChest")
        self.actionCTLungs = QtWidgets.QAction(MainWindow)
        self.actionCTLungs.setObjectName("actionCTLungs")
        self.actionNegative = QtWidgets.QAction(MainWindow)
        self.actionNegative.setObjectName("actionNegative")
        self.actionCustomWindow = QtWidgets.QAction(MainWindow)
        self.actionCustomWindow.setObjectName("actionCustomWindow")
        self.actionRotate90degreesCCW = QtWidgets.QAction(MainWindow)
        self.actionRotate90degreesCCW.setObjectName("actionRotate90degreesCCW")
        self.actionRotate90DegreesCW = QtWidgets.QAction(MainWindow)
        self.actionRotate90DegreesCW.setObjectName("actionRotate90DegreesCW")
        self.actionRotate180Degrees = QtWidgets.QAction(MainWindow)
        self.actionRotate180Degrees.setObjectName("actionRotate180Degrees")
        self.actionFlipHorizontal = QtWidgets.QAction(MainWindow)
        self.actionFlipHorizontal.setObjectName("actionFlipHorizontal")
        self.actionFlip_vertical = QtWidgets.QAction(MainWindow)
        self.actionFlip_vertical.setObjectName("actionFlip_vertical")
        self.actionClearTransformations = QtWidgets.QAction(MainWindow)
        self.actionClearTransformations.setObjectName("actionClearTransformations")
        self.menuADD_DICOM_images.addAction(self.actionAddDICOMFile)
        self.menuADD_DICOM_images.addAction(self.actionAddDICOMFolder)
        self.menuFiles.addAction(self.actionNewWindow)
        self.menuFiles.addAction(self.actionDuplicateWindow)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionOpenDICOMFile)
        self.menuFiles.addAction(self.actionOpenDICOMFolder)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.menuADD_DICOM_images.menuAction())
        self.menuExport.addAction(self.actionExportImages)
        self.menuExport.addSeparator()
        self.menuExport.addAction(self.actionCopy_to_clipboard)
        self.menuExport.addAction(self.actionCopy_all_to_clipboard)
        self.menuZoom.addAction(self.actionFillViewport)
        self.menuZoom.addAction(self.actionZoom100)
        self.menuZoom.addAction(self.actionZoom200)
        self.menuZoom.addAction(self.actionZoom400)
        self.menuZoom.addAction(self.actionZoom800)
        self.menuZoom.addSeparator()
        self.menuZoom.addAction(self.actionZoomIn)
        self.menuZoom.addAction(self.actionZoomOut)
        self.menuAdjustements.addAction(self.actionDefaultWindow)
        self.menuAdjustements.addAction(self.actionFullDynamic)
        self.menuAdjustements.addSeparator()
        self.menuAdjustements.addAction(self.actionCTAbdomen)
        self.menuAdjustements.addAction(self.actionCTAngio)
        self.menuAdjustements.addAction(self.actionCTBone)
        self.menuAdjustements.addAction(self.actionCTBrain)
        self.menuAdjustements.addAction(self.actionCTChest)
        self.menuAdjustements.addAction(self.actionCTLungs)
        self.menuAdjustements.addSeparator()
        self.menuAdjustements.addAction(self.actionNegative)
        self.menuAdjustements.addSeparator()
        self.menuAdjustements.addAction(self.actionCustomWindow)
        self.menuTransformations.addAction(self.actionRotate90degreesCCW)
        self.menuTransformations.addAction(self.actionRotate90DegreesCW)
        self.menuTransformations.addAction(self.actionRotate180Degrees)
        self.menuTransformations.addSeparator()
        self.menuTransformations.addAction(self.actionFlipHorizontal)
        self.menuTransformations.addAction(self.actionFlip_vertical)
        self.menuTransformations.addSeparator()
        self.menuTransformations.addAction(self.actionClearTransformations)
        self.menubar.addAction(self.menuAnnotations.menuAction())
        self.menubar.addAction(self.menuFiles.menuAction())
        self.menubar.addAction(self.menuExport.menuAction())
        self.menubar.addAction(self.menuZoom.menuAction())
        self.menubar.addAction(self.menuAlterations.menuAction())
        self.menubar.addAction(self.menuAdjustements.menuAction())
        self.menubar.addAction(self.menuTransformations.menuAction())
        self.menubar.addAction(self.menuCine.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mainGroupBox.setTitle(_translate("MainWindow", "DICOM Visualizer"))
        self.seriesExpGroup.setTitle(_translate("MainWindow", "Series"))
        self.seriesViewExp.setToolTip(_translate("MainWindow", "List of imported DICOM series"))
        self.graphicsBox.setTitle(_translate("MainWindow", "DICOM View"))
        self.metadataGroup.setTitle(_translate("MainWindow", "DICOM Tags"))
        self.label.setText(_translate("MainWindow", "Filter:"))
        self.filterLine.setToolTip(_translate("MainWindow", "Filter DICOM tags by name, ID, or content, using regular expressions, "))
        self.tagView.setToolTip(_translate("MainWindow", "List of DICOM tags"))
        self.menuFiles.setTitle(_translate("MainWindow", "Files"))
        self.menuADD_DICOM_images.setTitle(_translate("MainWindow", "ADD DICOM images"))
        self.menuExport.setTitle(_translate("MainWindow", "Export"))
        self.menuZoom.setTitle(_translate("MainWindow", "Zoom"))
        self.menuAnnotations.setTitle(_translate("MainWindow", "Annotations"))
        self.menuAlterations.setTitle(_translate("MainWindow", "Alterations"))
        self.menuAdjustements.setTitle(_translate("MainWindow", "Adjustements"))
        self.menuTransformations.setTitle(_translate("MainWindow", "Transformations"))
        self.menuCine.setTitle(_translate("MainWindow", "Cine"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Tab 1"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "Tab 2"))
        self.actionNewWindow.setText(_translate("MainWindow", "New window              Ctrl+N"))
        self.actionNewWindow.setStatusTip(_translate("MainWindow", "Open new window"))
        self.actionNewWindow.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionDuplicateWindow.setText(_translate("MainWindow", "Duplicate window      Ctrl+Shit+N"))
        self.actionDuplicateWindow.setStatusTip(_translate("MainWindow", "Duplicate the current window"))
        self.actionDuplicateWindow.setShortcut(_translate("MainWindow", "Ctrl+Shift+N"))
        self.actionOpenDICOMFile.setText(_translate("MainWindow", "Open DICOM file        Ctrl+O"))
        self.actionOpenDICOMFile.setStatusTip(_translate("MainWindow", "Open a DICOM file"))
        self.actionOpenDICOMFile.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionOpenDICOMFolder.setText(_translate("MainWindow", "Open DICOM folder   Ctrl+Shift+O"))
        self.actionOpenDICOMFolder.setStatusTip(_translate("MainWindow", "Open DICOM folder"))
        self.actionOpenDICOMFolder.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionAddDICOMFile.setText(_translate("MainWindow", "Add DICOM file"))
        self.actionAddDICOMFile.setStatusTip(_translate("MainWindow", "Add a new DICOM file"))
        self.actionAddDICOMFolder.setText(_translate("MainWindow", "Add DICOM folder"))
        self.actionAddDICOMFolder.setStatusTip(_translate("MainWindow", "ADD a new DICOM folder"))
        self.actionExportImages.setText(_translate("MainWindow", "Export images    Ctrl+E"))
        self.actionExportImages.setStatusTip(_translate("MainWindow", "Export images in different formats"))
        self.actionExportImages.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionCopy_to_clipboard.setText(_translate("MainWindow", "Copy to clipboard        Ctrl+C"))
        self.actionCopy_to_clipboard.setStatusTip(_translate("MainWindow", "Copy image to clipboard"))
        self.actionCopy_to_clipboard.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionCopy_all_to_clipboard.setText(_translate("MainWindow", "Copy all to clipboard   Shift+C"))
        self.actionCopy_all_to_clipboard.setStatusTip(_translate("MainWindow", "Copy all images to clipboard"))
        self.actionCopy_all_to_clipboard.setShortcut(_translate("MainWindow", "Shift+C"))
        self.actionFillViewport.setText(_translate("MainWindow", "Fill viewport   Ctrl+0"))
        self.actionFillViewport.setStatusTip(_translate("MainWindow", "Fill the whole visible viewport"))
        self.actionFillViewport.setShortcut(_translate("MainWindow", "Ctrl+0"))
        self.actionZoom100.setText(_translate("MainWindow", "100%  Ctrl+1"))
        self.actionZoom100.setStatusTip(_translate("MainWindow", "100% zoomIn in"))
        self.actionZoom100.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionZoom200.setText(_translate("MainWindow", "200%  Ctrl+2"))
        self.actionZoom200.setStatusTip(_translate("MainWindow", "200% zoomIn in"))
        self.actionZoom400.setText(_translate("MainWindow", "400%   Ctrl+3"))
        self.actionZoom400.setStatusTip(_translate("MainWindow", "400% zoomIn in"))
        self.actionZoom800.setText(_translate("MainWindow", "800%   Ctrl+4"))
        self.actionZoom800.setStatusTip(_translate("MainWindow", "800% zoomIn in"))
        self.actionZoomIn.setText(_translate("MainWindow", "Zoom in Ctrl++"))
        self.actionZoomIn.setStatusTip(_translate("MainWindow", "zooms in"))
        self.actionZoomIn.setShortcut(_translate("MainWindow", "Ctrl++"))
        self.actionZoomOut.setText(_translate("MainWindow", "Zoom out   Ctrl+-"))
        self.actionZoomOut.setStatusTip(_translate("MainWindow", "zooms out"))
        self.actionZoomOut.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionDefaultWindow.setText(_translate("MainWindow", "Default window         0"))
        self.actionDefaultWindow.setStatusTip(_translate("MainWindow", "defualt window"))
        self.actionDefaultWindow.setShortcut(_translate("MainWindow", "0"))
        self.actionFullDynamic.setText(_translate("MainWindow", "Full dynamic              1"))
        self.actionFullDynamic.setStatusTip(_translate("MainWindow", "full dynamic"))
        self.actionFullDynamic.setShortcut(_translate("MainWindow", "1"))
        self.actionCTAbdomen.setText(_translate("MainWindow", "CT Abdomen             2"))
        self.actionCTAbdomen.setStatusTip(_translate("MainWindow", "CT Abdomen"))
        self.actionCTAbdomen.setShortcut(_translate("MainWindow", "2"))
        self.actionCTAngio.setText(_translate("MainWindow", "CT Angio                    3"))
        self.actionCTAngio.setStatusTip(_translate("MainWindow", "CT Angio"))
        self.actionCTAngio.setShortcut(_translate("MainWindow", "3"))
        self.actionCTBone.setText(_translate("MainWindow", "CT Bone                     4"))
        self.actionCTBone.setStatusTip(_translate("MainWindow", "CT Bone"))
        self.actionCTBone.setShortcut(_translate("MainWindow", "4"))
        self.actionCTBrain.setText(_translate("MainWindow", "CT Brain                     5"))
        self.actionCTBrain.setStatusTip(_translate("MainWindow", "CT Brain"))
        self.actionCTBrain.setShortcut(_translate("MainWindow", "5"))
        self.actionCTChest.setText(_translate("MainWindow", "CT Chest                    6"))
        self.actionCTChest.setStatusTip(_translate("MainWindow", "CT Chest"))
        self.actionCTChest.setShortcut(_translate("MainWindow", "6"))
        self.actionCTLungs.setText(_translate("MainWindow", "CT Lungs                    7"))
        self.actionCTLungs.setStatusTip(_translate("MainWindow", "CT Lungs"))
        self.actionCTLungs.setShortcut(_translate("MainWindow", "7"))
        self.actionNegative.setText(_translate("MainWindow", "Negative                    F11"))
        self.actionNegative.setStatusTip(_translate("MainWindow", "Negative filter"))
        self.actionCustomWindow.setText(_translate("MainWindow", "Custom window        Ctrl+F11"))
        self.actionCustomWindow.setStatusTip(_translate("MainWindow", "Custom window settings"))
        self.actionRotate90degreesCCW.setText(_translate("MainWindow", "Rotate 90° CCW       Ctrl+["))
        self.actionRotate90degreesCCW.setStatusTip(_translate("MainWindow", "Rotate 90 degrees counter clock wise"))
        self.actionRotate90degreesCCW.setShortcut(_translate("MainWindow", "Ctrl+Alt+T"))
        self.actionRotate90DegreesCW.setText(_translate("MainWindow", "Rotate 90° CW"))
        self.actionRotate90DegreesCW.setStatusTip(_translate("MainWindow", "Rotate 90 degrees clockwise"))
        self.actionRotate90DegreesCW.setShortcut(_translate("MainWindow", "Meta+Ctrl+T"))
        self.actionRotate180Degrees.setText(_translate("MainWindow", "Rotate 180°"))
        self.actionRotate180Degrees.setStatusTip(_translate("MainWindow", "Rotate 180 degrees clockwise"))
        self.actionRotate180Degrees.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionFlipHorizontal.setText(_translate("MainWindow", "Flip horizontal"))
        self.actionFlipHorizontal.setStatusTip(_translate("MainWindow", "Flip Horizontal"))
        self.actionFlipHorizontal.setShortcut(_translate("MainWindow", "Ctrl+J"))
        self.actionFlip_vertical.setText(_translate("MainWindow", "Flip vertical"))
        self.actionFlip_vertical.setStatusTip(_translate("MainWindow", "Flip vertical"))
        self.actionFlip_vertical.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionClearTransformations.setText(_translate("MainWindow", "Clear transformations"))
        self.actionClearTransformations.setStatusTip(_translate("MainWindow", "Clear transformations"))
        self.actionClearTransformations.setShortcut(_translate("MainWindow", "Ctrl+Ù"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
